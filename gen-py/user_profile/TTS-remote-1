#!/usr/bin/env python
#
# Autogenerated by Thrift Compiler (0.9.0)
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#
#  options string: py
#

import sys
import pprint
# from urlparse import urlparse
import urllib.parse as urlparse
from thrift.transport import TTransport
from thrift.transport import TSocket
from thrift.transport import THttpClient
from thrift.protocol import TBinaryProtocol

import TTS_LPCnet
from ttypes import *

import struct


def float_to_hex(f):
    return hex(struct.unpack('<I', struct.pack('<f', f))[0])


def mel_to_hex(mel):
    return (("{}|" * len(mel))).format(*tuple([float_to_hex(x) for x in mel]))[:-1]

def genAudio(mel,
             host='localhost',
             port=9090,
             framed=False, uri='', http=False, argi=1):
    pp = pprint.PrettyPrinter(indent=2)
    if http:
        transport = THttpClient.THttpClient(host, port, uri)
    else:
        socket = TSocket.TSocket(host, port)
        if framed:
            transport = TTransport.TFramedTransport(socket)
        else:
            transport = TTransport.TBufferedTransport(socket)
    protocol = TBinaryProtocol.TBinaryProtocol(transport)
    client = TTS_LPCnet.Client(protocol)
    transport.open()
    result = client.genAudio(mel_to_hex(mel), )
    transport.close()
    return result



# def if __name__ == "__main__":
    # Load mel

    # genAudio
